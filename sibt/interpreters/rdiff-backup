#!bash-runner

AdditionalSyncOpts=

available-options() {
  echo RemoveOlderThan
  echo AdditionalSyncOpts
}

sync() {
  rdiff-backup $AdditionalSyncOpts "$Loc1" "$Loc2"
  if [ -n "${RemoveOlderThan+a}" ]; then
    rdiff-backup $AdditionalSyncOpts --remove-older-than "$RemoveOlderThan" \
        "$Loc2"
  fi
}

versions-of() {
  path="$1"
  locNumber=$2
  if [ $locNumber = 2 ]; then
    return
  fi
  rdiff-backup --parsable-output --list-increments "$Loc2"/"$path" | \
      { grep -v missing || true; } | cut -d ' ' -f 1
}

restore() {
  path="$1"
  locNumber=$2
  timestamp=$4
  dest="$5"

  if [ $locNumber = 2 ]; then
    return
  fi

  declare -a restoreCall=(rdiff-backup --force --restore-as-of $timestamp 
      "$Loc2"/"$path")
  if [ "$dest" = "" ]; then
    "${restoreCall[@]}" "$Loc1"/"$path"
  else
    "${restoreCall[@]}" "$dest"
  fi
}

get-file-type() {
  rdiff-backup --parsable-output --list-increments \
      "$Loc2"/"$1" | sed -n -e "/^${2}/p" | cut -d ' ' -f 2
}

append-slash-if-dir() {
  while read fileName; do
    fileType=$(get-file-type "$fileName" $1)
    echo -n "$fileName"

    if [ $fileType = directory ]; then
      echo -n '/'
    fi

    echo -n -e '\0'
  done
}

remove-prefix() {
  while read -d $'\0' word; do
    echo -n "${word:${#1}:${#word}}"
    echo -n -e '\0'
  done
}

list-files() {
  path="$1"
  locNumber=$2
  timestamp=$4
  recursively=$5

  if [ $locNumber = 2 ]; then
    return
  fi

  typeOfFile=$(get-file-type "$path" $timestamp)
  if [ $typeOfFile != directory ]; then
    echo -n "${path##*/}"
    echo -e -n '\0'
    return
  fi

  filterDirectChildren='\,^[^/]+/[^/]+/,!p'
  prependPeriodSlash='s,^,./,'

  filter="$filterDirectChildren"
  if [ $recursively = 1 ]; then
    filter='p'
  fi

  preprocessing=''
  prefix="$path"/
  if [ "$path" = . ]; then
    prefix=./
    preprocessing="$prependPeriodSlash"
  fi

  rdiff-backup --list-at-time $timestamp "$Loc2"/"$path" | sed -n -e '1!p' |\
    sed -r -e "$preprocessing" | sed -nr -e "$filter" |\
    append-slash-if-dir $timestamp | remove-prefix "$prefix"
}
