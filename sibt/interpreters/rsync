#!bash-runner

AdditionalSyncOpts=

available-options() {
cat <<EOF
AdditionalSyncOpts
EOF
}

run-rsync() {
  local srcPath="$1"
  if [[ "$srcPath" =~ [^/]$ && -d "$srcPath" ]]; then
    srcPath+=/
  fi
  rsync -a --acls --xattrs --delete "$srcPath" "$2" $AdditionalSyncOpts
}

sync() {
  run-rsync "$Loc1" "$Loc2"
}

versions-of() {
  path="$1"
  locNumber=$2

  if [ $locNumber = 2 ]; then
    return
  fi

  fullPath="$Loc2"/"$path"
  if [ -e "$fullPath" ]; then
    stat -c%Y "$fullPath"
  fi
}

restore() {
  path="$1"
  locNumber="$2"
  dest="$5"

  if [ -z "$dest" ]; then
    dest="$Loc1"/"$path"
  fi
  
  run-rsync "$Loc2"/"$path" "$dest"
}

list-files() {
  relativePath="$1"
  locNumber="$2"
  recursively=$5
  path="$Loc2"/"$relativePath"

  if [ $locNumber = 2 ]; then
    return
  fi

  mindepth=0
  filePathFormat=f
  if [[ -d "$path" && ! -L "$path" ]]; then
    mindepth=1
    filePathFormat=P
  fi

  declare -a maxdepth=(-maxdepth 1)
  if [ $recursively = 1 ]; then
    maxdepth=()
  fi

  find "$path" -mindepth "$mindepth" "${maxdepth[@]:+${maxdepth[@]}}" \
    -printf '%y%'$filePathFormat'\0' | \
    sed -zr -e 's,^d(.*)$,\1/,
      t
      s,^.(.*)$,\1,'
}
