#!bash-runner

AdditionalSyncOpts=

available-options() {
cat <<EOF
AdditionalSyncOpts
EOF
}

run-rsync() {
  local srcPath="$1"
  if [ $3 = 1 ]; then
    srcPath+=/
  fi
  # use --protect-args
  rsync -a --acls --xattrs "${@:4:20}" "$srcPath" "$2" $AdditionalSyncOpts
}

sync() {
  run-rsync "$Loc1" "$Loc2" 1 --delete
}

versions-of() {
  path="$1"
  locNumber=$2

  if [ $locNumber = 2 ]; then
    return
  fi

  fullPath="$Loc2"/"$path"
  if [ -e "$fullPath" ]; then
    stat -c%Y "$fullPath"
  fi
}

restore() {
  path="$1"
  locNumber="$2"
  dest="$5"
  restoringToSourceTree=0

  src="$Loc2"/"$path"
  srcFileType=$(get-file-type "$src")

  if [ -z "$dest" ]; then
    restoringToSourceTree=1
    dest="$Loc1"/"$path"
  fi

  restoringEntireLoc=0
  if [ -z "$path" ]; then
    restoringEntireLoc=1
  fi

  declare -a options=()
  withSlash=0

  if [ $restoringToSourceTree = 1 ]; then

    options+=(--delete)

    if [ $restoringEntireLoc = 1 ]; then
      withSlash=1
    else
      dest=$(dirname "$dest")
      withSlash=0
    fi

  else

    if ! [ -e "$dest" ] && [ $srcFileType = directory ]; then
      withSlash=1
    fi

    destFileType=$(get-file-type "$dest" follow-links)
    if [ $destFileType = directory ] && [ $srcFileType = directory ]; then
      fileInDest="$dest"/"$(basename "$src")"
      if [ $(get-file-type "$fileInDest") = non-directory ]; then
        print-error "destination contains non-directory "\
"‘$(basename "$src")’, could not make way for source"
        return 1
      fi
    fi

  fi
  
  run-rsync "$src" "$dest" $withSlash "${options[@]:+${options[@]}}"
}

list-files() {
  relativePath="$1"
  locNumber="$2"
  recursively=$5
  path="$Loc2"/"$relativePath"

  if [ $locNumber = 2 ]; then
    return
  fi

  mindepth=0
  filePathFormat=f
  if [[ -d "$path" && ! -L "$path" ]]; then
    mindepth=1
    filePathFormat=P
  fi

  declare -a maxdepth=(-maxdepth 1)
  if [ $recursively = 1 ]; then
    maxdepth=()
  fi

  find "$path" -mindepth "$mindepth" "${maxdepth[@]:+${maxdepth[@]}}" \
    -printf '%y%'$filePathFormat'\0' | \
    sed -zr -e 's,^d(.*)$,\1/,
      t
      s,^.(.*)$,\1,'
}
